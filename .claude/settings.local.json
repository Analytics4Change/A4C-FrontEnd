{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(ls:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(mkdir:*)",
      "mcp__serena__list_dir",
      "mcp__serena__search_for_pattern",
      "Bash(diff:*)",
      "mcp__serena__find_file",
      "Bash(mv:*)",
      "Bash(true)",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__get_symbols_overview",
      "Bash(npm run build:*)",
      "Bash(npx vite:*)",
      "Bash(npm run test:run:*)",
      "mcp__serena__think_about_whether_you_are_done",
      "Bash(npm test:*)",
      "mcp__context7__resolve-library-id",
      "mcp__serena__find_symbol",
      "Bash(grep:*)",
      "Bash(npm run type-check:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "mcp__serena__read_memory",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__find_referencing_symbols",
      "Bash(npm run lint:*)",
      "Bash(npx tsc:*)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright install:*)",
      "Bash(curl:*)",
      "Bash(/dev/null)",
      "Bash(git log:*)",
      "Bash(npm run coverage:*)",
      "Bash(for i in {1..10})",
      "Bash(do echo \"=== Run $i ===\")",
      "Bash(done)",
      "Bash(timeout 120 npm test --run)",
      "Bash(sudo npx playwright:*)",
      "Bash(npx playwright:*)",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__think_about_task_adherence",
      "Bash(node:*)",
      "Bash(sed:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=4096\" npm test -- --run src/contexts/focus/__tests__/keyboard-navigation-extensions.test.tsx --reporter=verbose)",
      "Bash(export NODE_OPTIONS=\"--max-old-space-size=4096\")",
      "Bash(npm run dev:*)",
      "Bash(chmod:*)",
      "Bash(npm run test:memory:profiler:*)",
      "Bash(timeout:*)",
      "Bash(MEMORY_PROFILE=true npm run test -- --run src/contexts/focus/__tests__/accessibility-audit-comprehensive.test.tsx --config vitest.config.memory.js)",
      "Bash(MEMORY_PROFILE=true node --expose-gc ./node_modules/.bin/vitest --run src/contexts/focus/__tests__/accessibility-audit-comprehensive.test.tsx --config vitest.config.memory.js)",
      "Bash(MEMORY_PROFILE=true timeout 30 npx vitest run --config vitest.config.memory.js src/contexts/focus/__tests__/accessibility-compliance.test.tsx)",
      "Bash(npm run test:memory:*)",
      "Bash(MEMORY_PROFILE=true node --expose-gc ./node_modules/.bin/vitest --run src/contexts/focus/__tests__/FocusManagerContext.test.tsx --config vitest.config.memory.js)",
      "Bash(MEMORY_DASHBOARD=true timeout 15 node --expose-gc scripts/test-memory-monitor.cjs)",
      "Bash(env MEMORY_DASHBOARD=true timeout 15 node --expose-gc scripts/test-memory-monitor.cjs)",
      "Bash(env MEMORY_DASHBOARD=true timeout 10 node --expose-gc scripts/test-memory-monitor.cjs)",
      "Bash(MEMORY_DASHBOARD=true node --expose-gc scripts/test-memory-monitor.cjs src/contexts/focus/__tests__/async-validation.integration.test.tsx)",
      "Bash(MEMORY_DASHBOARD=true timeout 30 node --expose-gc -e \"\nconst EnhancedTestRunner = require(''./scripts/test-memory-monitor.cjs'');\nconst runner = new EnhancedTestRunner({\n  memoryThresholds: {\n    maxHeapUsed: 300 * 1024 * 1024,\n    maxRss: 500 * 1024 * 1024\n  },\n  timeout: 10000\n});\n\nconsole.log(''Dashboard enabled:'', runner.dashboard.enabled);\nconsole.log(''Dashboard methods:'', Object.getOwnPropertyNames(runner.dashboard));\n\")",
      "Bash(SKIP_MEMORY_CHECK=true echo \"Testing skip functionality - this simulates the pre-commit hook\")",
      "Bash(npm run precommit:memory:quick:*)",
      "Bash(bash:*)",
      "Bash(dmesg:*)",
      "Bash(journalctl:*)",
      "Bash(systemctl status:*)",
      "Bash(oomctl:*)",
      "Bash(echo:*)",
      "Bash(echo \"performance-verification: $?\")",
      "WebSearch",
      "Bash(npm run typecheck:*)",
      "Bash(npm run test:e2e:*)",
      "mcp__exa__deep_researcher_check"
    ],
    "deny": [],
    "additionalDirectories": [
      "/Users/lars/dev/A4C-figma/medication_adminstration",
      "/tmp"
    ]
  }
}